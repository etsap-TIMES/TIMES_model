*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
* Copyright (C) 2000-2020 Energy Technology Systems Analysis Programme (ETSAP)
* This file is part of the IEA-ETSAP TIMES model generator, licensed
* under the GNU General Public License v3.0 (see file LICENSE.txt).
*=============================================================================*
* RECURRIN.stc oversees recurring stochastic definitions
*   %1 - mod or v# for the source code to be used
*=============================================================================*
* Questions/Comments:
*
*-----------------------------------------------------------------------------
* Can we use macroes?
$SET TST NO
$IFI %OBMAC%==YES $SET TST YES
*-----------------------------------------------------------------------------
$GOTO %1
*-----------------------------------------------------------------------------
$LABEL MXPAR
* Do we need MX parameter macroes?
$SET NEED NO
$IF DEFINED S_NCAP_AFS $SET NEED YES
$IF DEFINED S_COM_FR $SET NEED YES
$IFI %SPINES%==YES $SET NEED YES
$IF %NEED%==NO $GOTO NONEED
*---
$IF %TST%==YES $GOTO DEFPAR
$error Macro support needed. Upgrade your GAMS system.
$clearerror
$KILL S_NCAP_AFS S_COM_FR
*---
$LABEL NONEED
$EXIT
*---
$LABEL DEFPAR
$SET SW1 '' SET SW2 ''
$IF NOT %STAGES%==YES $SET SW1 'SUM' SET SW2 SOW,
$SETGLOBAL MX MX
$macro MX
* Default case
$IF NOT DEFINED S_NCAP_AFS $MACRO COEF_AFMX COEF_AF
$IF NOT DEFINED S_COM_FR   $MACRO RTCS_FRMX RTCS_FR
$IF NOT DEFINED S_COM_FR   $MACRO COM_FRMX  COM_FR
$IFI NOT %SPINES%==YES     $MACRO PRC_DYNUCMX PRC_DYNUC
* Defined case
$IF DEFINED S_NCAP_AFS $MACRO COEF_AFMX(R,V,T,P,S,BD) COEF_AF(R,V,T,P,S,BD)*%SW1%(%SW2%1+RTP_SAFS(R,T,P,S,SOW))
$IF DEFINED S_COM_FR   PARAMETER  RTCS_FRMX(R,T,C,S,S);
$IF DEFINED S_COM_FR   $MACRO RTCS_FR(R,T,C,S,TS) RTCS_FRMX(R,T,C,S,TS)+SUM(SW_T2W(SOW,T,W,T0),RCS_SSFR(R,C,S,TS,W,T0))
$IF DEFINED S_COM_FR   $MACRO COM_FRMX(R,T,C,S) COM_FR(R,T,C,S)*%SW1%(%SW2%1+S_COM_FR(R,T,C,S,'1',SOW))
$GOTO FINISH
*-----------------------------------------------------------------------------
$LABEL SPINES
* Do we need SPINES macroes?
$IFI NOT %SPINES%==YES $EXIT
$IF %TST%==NO $ABORT Macro support needed. Upgrade your GAMS system.
$SET VSUM SUM(SW_TSW(SOW,
$SETGLOBAL SW_STVARS SET VAR "Z" SET VART '%VSUM%T,W),Z' SET VARM '%VSUM%MODLYEAR,W),Z' SET VARV '%VSUM%V,W),Z'
$SETGLOBAL WITSPINE SET EQS '%EQ%' SET EQ 'Q'
$SETGLOBAL EWISPINE SET EQ %EQ%
  SET OBJSW1(OBV);
  SET UCRTPSW1(UC_GRPTYPE,WW);
  OBJSW1('OBJINV')=YES;
  OBJSW1('OBJFIX')=YES;
  OBJSW1('OBJSAL')=YES;
  UCRTPSW1('ACT',SOW) = YES;
  UCRTPSW1('CAP','1') = YES;
  UCRTPSW1('NCAP','1') = YES;
$macro QED
$macro PRC_DYNUCMX(uc,side,r,t,p,grp,bd) PRC_DYNUC(uc,side,r,t,p,grp,bd)$UCRTPSW1(grp,SOW)
*-----------------------------------------------------------------------------
* Equations (only if needed)
$macro Q_OBJELS          ES_OBJELS
$macro Q_OBJFIX(rc,sow)  ES_OBJFIX(rc,SOW('1'))
$macro Q_OBJINV(rc,sow)  ES_OBJINV(rc,SOW('1'))
$macro Q_OBJSALV(rc,sow) ES_OBJSALV(rc,SOW('1'))
$macro Q_OBJVAR          ES_OBJVAR
$macro Q_ROBJ            ES_ROBJ
$macro Q_SOBJ            ES_SOBJ

$macro QG_CPT(rtp,swt)   ESG_CPT(rtp,T,SOW('1'))
$macro QE_CPT(rtp,swt)   ESE_CPT(rtp,T,SOW('1'))
$macro QL_CPT(rtp,swt)   ESL_CPT(rtp,T,SOW('1'))
$macro Q_DSCRET(cpt,sw)  ES_DSCRET(cpt,T,SOW('1'))
$macro Q_CUMRET(r,v,p,w) ES_CUMRET(r,v,p,T,SOW('1'))
$macro QL_REFIT(rttp,swt) ESL_REFIT(rttp,T,SOW('1'))
$macro Q_DSCNCAP(rtp,sw) ES_DSCNCAP(rtp,T,SOW('1'))
$macro Q_DSCONE(rtp,swt) ES_DSCONE(rtp,T,SOW('1'))

$macro QE_UCT    ESE_UCT
$macro QE_UCRT   ESE_UCRT
$macro QE_UCTS   ESE_UCTS
$macro QE_UCRS   ESE_UCRS
$macro QE_UCRTS  ESE_UCRTS

* Cumulative / dynamic
$IF %SOLVEDA%==1 $GOTO DYQAGG
$SETGLOBAL SW_STVARS %SW_STVARS% SET VARTT '%VSUM%TT,W),Z' SET SWSW SW_TSW(SOW,T,WW),
$macro Q_CUMNET  ES_CUMNET
$macro Q_CUMPRD  ES_CUMPRD
$macro Q_CUMFLO  ES_CUMFLO
$macro Q_BNDCST  ES_BNDCST
$macro QE_UC     ESE_UC
$macro QE_UCR    ESE_UCR
$macro QE_UCSU   ESE_UCSU
$macro QE_UCSUS  ESE_UCSUS
$macro QE_UCRSU  ESE_UCRSU
$macro QE_UCRSUS ESE_UCRSUS
$macro QL_SCAP   ESL_SCAP
$GOTO DYQDONE
$LABEL DYQAGG
$SETGLOBAL SCUM 1
$SETGLOBAL SW_STVARS %SW_STVARS% SET VARTT 'SUM(SW_TSW(W,TT,W),SW_TPROB(TT,W)*Z' SET SWSW SW_TSW(SOW(WW),T,WW),SW_TPROB(T,WW)*
$macro Q_CUMNET(rc,y1,y2,sow) ES_CUMNET(rc,y1,y2,'1')
$macro Q_CUMPRD(rc,y1,y2,sow) ES_CUMPRD(rc,y1,y2,'1')
$macro Q_CUMFLO(rpcyy,sw)     ES_CUMFLO(rpcyy,'1')
$macro Q_BNDCST(r,y,y2,c,m,w) ES_BNDCST(r,y,y2,c,m,'1')
$macro QE_UC(uc,sow)          ESE_UC(uc,'1')
$macro QE_UCR(uc,r,sow)       ESE_UCR(uc,r,'1')
$macro QE_UCSU(uc,t,sw)       ESE_UCSU(uc,t,'1')
$macro QE_UCSUS(uc,t,s,sw)    ESE_UCSUS(uc,t,s,'1')
$macro QE_UCRSU(uc,r,t,sw)    ESE_UCRSU(uc,r,t,'1')
$macro QE_UCRSUS(uc,r,t,s,sw) ESE_UCRSUS(uc,r,t,s,'1')
$macro QL_SCAP(rtp,ip,sow)    ESL_SCAP(rtp,ip,'1')
$LABEL DYQDONE
*-----------------------------------------------------------------------------
* Variables (must have for all standard)
$macro Z_OBJ VAS_OBJ
$macro Z_OBJELS VAS_OBJELS

$macro Z_ACT VAS_ACT
$macro Z_FLO VAS_FLO
$macro Z_IRE VAS_IRE
$macro Z_SIN VAS_SIN
$macro Z_SOUT VAS_SOUT
$macro Z_BLND VAS_BLND
$macro Z_COMNET VAS_COMNET
$macro Z_COMPRD VAS_COMPRD
$macro Z_ELAST VAS_ELAST
$macro Z_DEM VAS_DEM
$macro Z_UPS VAS_UPS
$macro Z_UPT VAS_UPT
$macro Z_UDP VAS_UDP
$macro Z_RLD VAS_RLD
$macro Z_GRIDELC VAS_GRIDELC
$macro Z_COMAUX VAS_COMAUX

$macro Z_CAP(r,t,p,sow)     VAS_CAP(r,t,p,'1')
$macro Z_NCAP(r,t,p,sow)    VAS_NCAP(r,t,p,'1')
$macro Z_RCAP(r,v,t,p,sow)  VAS_RCAP(r,v,t,p,'1')
$macro Z_SCAP(r,v,t,p,sow)  VAS_SCAP(r,v,t,p,'1')
$macro Z_DRCAP(r,v,t,p,w,j) VAS_DRCAP(r,v,t,p,'1',j)
$macro Z_DNCAP(r,t,p,sow,j) VAS_DNCAP(r,t,p,'1',j)
$macro Z_SNCAP(r,t,p,sow)   VAS_SNCAP(r,t,p,'1')

$macro Z_UC VAS_UC
$macro Z_UCR VAS_UCR
$macro Z_UCT VAS_UCT
$macro Z_UCRT VAS_UCRT
$macro Z_UCTS VAS_UCTS
$macro Z_UCRTS VAS_UCRTS

$IF %SOLVEDA%==1 $GOTO DYZAGG
$macro Z_CUMCOM VAS_CUMCOM
$macro Z_CUMFLO VAS_CUMFLO
$macro Z_CUMCST VAS_CUMCST
$GOTO DYZDONE
$LABEL DYZAGG
$macro Z_CUMCOM(r,c,cv,y1,y2,w) VAS_CUMCOM(r,c,cv,y1,y2,'1')
$macro Z_CUMFLO(r,p,cv,y1,y2,w) VAS_CUMFLO(r,p,cv,y1,y2,'1')
$macro Z_CUMCST(r,y1,y2,cg,m,w) VAS_CUMCST(r,y1,y2,cg,m,'1')
$LABEL DYZDONE

$macro Z_CLITOT VAS_CLITOT
$macro Z_CLIBOX VAS_CLIBOX

* Map objective components
 EQUATION %EQ%_OBW1(OBV,R,CUR,ALLSOW);
 %EQ%_OBW1(OBJSW1(OBV),RDCUR(R,CUR),SOW) .. %VAR%_OBJ(R,OBV,CUR,SOW) =E= %VAR%_OBJ(R,OBV,CUR,'1');

*-----------------------------------------------------------------------------
$LABEL FINISH
